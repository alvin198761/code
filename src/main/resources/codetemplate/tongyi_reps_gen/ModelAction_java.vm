package ${pName};
import java.util.List;
import org.alvin.code.gen.utils.Page;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.bind.annotation.*;
import org.alvin.code.gen.beans.RestfullResp;
/**
* @类说明: ${cName}--数据控制器层
* @author: ${auth}
* @date : ${time}
**/
@RestController
@RequestMapping("${lowUpp}")
public class ${clsUpp}Action {

	@SuppressWarnings("unused")
	private final Log logger = LogFactory.getLog(getClass());
	@Autowired
	private ${clsUpp}Service service; //注入${cName}数据逻辑层

    /**
    * @方法说明：  新增[${cName}]记录
    */
	@PostMapping("save")
	public RestfullResp<Integer> save(@RequestBody ${clsUpp} ${lowUpp}) {
		return new RestfullResp(service.save(${lowUpp}));
	}

    /**
    * @方法说明： 删除${cName}记录(多条)
    */
	@RequestMapping("delete")
	public RestfullResp<Integer> delete(@RequestParam("id") ${idType} id) {
		return new RestfullResp(service.delete(new ${idType} [] {id}));
	}

    /**
    * @方法说明： 修改${cName}记录
    */
	@PostMapping("update")
	public RestfullResp<Integer> update(@RequestBody ${clsUpp} ${lowUpp}) {
		return new RestfullResp(service.update(${lowUpp}));
	}

    /**
    * @方法说明： 按条件查询分页${cName}列表
    */
	@PostMapping("queryPage")
	public RestfullResp<Page<${clsUpp}>> queryPage(@RequestBody ${clsUpp}Cond cond ){
		return new RestfullResp(service.queryPage(cond));
	}

    /**
    * @方法说明： 按条件查询不分页${cName}列表
    */
	@PostMapping("queryList")
	public RestfullResp<List<${clsUpp}>> queryList(@RequestBody ${clsUpp}Cond cond ){
		return new RestfullResp(service.queryList(cond));
	}

    /**
    * @方法说明： 按主键查单个${cName}记录
    */
	@RequestMapping("findById")
	public RestfullResp<${clsUpp}> findById(@RequestParam("id") ${idType} id) {
		return new RestfullResp(service.findById(id));
	}

    /**
    * @方法说明： 按条件查询${cName}记录个数
    */
	@PostMapping("queryCount")
	public RestfullResp<Long> queryCount(@RequestBody ${clsUpp}Cond cond ){
		return new RestfullResp(service.queryCount(cond));
	}
}